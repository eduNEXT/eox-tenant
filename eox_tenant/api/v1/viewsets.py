"""
API v1 viewsets.
"""
import logging

from rest_framework import viewsets
from rest_framework.authentication import SessionAuthentication
from rest_framework.parsers import JSONParser

from eox_tenant.api.v1.permissions import EoxTenantAPIPermission
from eox_tenant.api.v1.serializers import MicrositeSerializer, RouteSerializer, TenantConfigSerializer
from eox_tenant.edxapp_wrapper.bearer_authentication import BearerAuthentication
from eox_tenant.models import Microsite, Route, TenantConfig

logger = logging.getLogger(__name__)


class AlternativeFieldLookupMixin:
    """
    This mixin allows to get the corresponding object via the autogenerated id field (pk)
    or the field specified in the 'alternative_lookup_field' attribute.

    If the value sent in the URL is an identifier composed of digits only, then the
    lookup_field will remain the same. Otherwise, the alternative_lookup_field will become
    the lookup field for the object.

    This class assumes that the 'lookup_field' attribute of the view is a field whose value
    is composed of digits only and expects the 'alternative_lookup_field' value to contain
    non-numeric characters.

    This mixin is meant to be used temporarily to help deprecate the use of the regular ID
    in the viewsets, and it's expected to be removed by July 2023.
    After its removal, the 'lookup_field' attribute of both viewsets should be overridden
    to be the site key instead of the ID.
    """

    def get_object(self):
        """
        Override method in order to change the lookup_field when
        necessary.
        """
        main_lookup_field = self.lookup_field
        lookup_value = self.kwargs.get(main_lookup_field)

        if lookup_value and not lookup_value.isdigit():
            alternative_lookup_field = getattr(self, 'alternative_lookup_field', main_lookup_field)

            self.kwargs.pop(main_lookup_field, None)
            self.kwargs[alternative_lookup_field] = lookup_value
            self.lookup_field = alternative_lookup_field

        else:
            logger.warning('Using the autogenerated id value is deprecated, use the Site Key instead')

        return super().get_object()


class MicrositeViewSet(AlternativeFieldLookupMixin, viewsets.ModelViewSet):
    """ViewSet that allows the basic API actions over the Microsite model.

    This Viewset inherits from the AlternativeFieldLookupMixin class; therefore,
    in the actions of retrieve, update, partial_update, and destroy, you can
    send both the autogenerated id field (pk) or the microsite key to get the
    corresponding object.

    **Example Read Request**:

    `GET <domain>/eox-tenant/api/v1/microsites/`

        Response:
        [
            {
                "id": 1,
                "values": {
                    "EDNX_CUSTOM_REGISTRATION_FIELDS": [
                        {
                            "html_override": "<a href=\"/contact\" tabindex=\"-1\">",
                            "label": "I agree to {}",
                            "name": "confidentiality",
                            "type": "checkbox"
                        },
                    ],
                    "EDNX_USE_SIGNAL": true,
                    "EOX_CORE_UPDATE_USERS_ENABLE": true,
                    ...
                }
                "key": "Ac397kB23",
                "subdomain": "test1.edu.io",
                "organizations": [
                    2
                ]
            },
            {
                "id": 2,
                "values": {
                    "EOX_CORE_USER_UPDATE_SAFE_FIELDS": [
                        "is_active",
                        "password",
                        "fullname",
                        "mailing_address",
                        "year_of_birth",
                    ],
                    "EOX_HOOKS_DEFINITIONS": {
                        "post_certificate_creation": {
                            "action": "post_to_webhook_url",
                            "config": {
                                "send_certificate_data": true,
                                "url": "https://hooks.zapier.com/hooks/catch/9477617/onlv1rq/silent/"
                            },
                            "fail_silently": true,
                            "module": "eox_hooks.actions"
                        }
                    },
                    "LANGUAGE_CODE": "en",
                    "PLATFORM_NAME": "Site TEST 1",
                    ...
                }
                "key": "MdS47g0opW",
                "subdomain": "world.economy.edu.io",
                "organizations": [
                    4
                ]
            },
            ...
        ]

    `GET <domain>/eox-tenant/api/v1/microsites/xAer5z6FEbW/`

        Response:
        {
            "id": 1001,
            "values": {
                "EDNX_CUSTOM_REGISTRATION_FIELDS": [
                    {
                        "html_override": "<a href=\"/contact\" tabindex=\"-1\">",
                        "label": "I agree to {}",
                        "name": "confidentiality",
                        "type": "checkbox"
                    },
                ],
                "EDNX_USE_SIGNAL": true,
                "EOX_CORE_UPDATE_USERS_ENABLE": true,
                ...
            }
            "key": "xAer5z6FEbW",
            "subdomain": "testing.site.edu.io",
            "organizations": [
                1
            ]
        }

    **Example Create Request**:

    `POST <domain>/eox-tenant/api/v1/microsites/`

        body: {
            "values": {
                "EOX_CORE_USER_UPDATE_SAFE_FIELDS": [
                    "is_active",
                    "password",
                    "fullname",
                    "mailing_address",
                    "year_of_birth",
                ],
                "EOX_HOOKS_DEFINITIONS": {
                    "post_certificate_creation": {
                        "action": "post_to_webhook_url",
                        "config": {
                            "send_certificate_data": true,
                            "url": "https://hooks.zapier.com/hooks/catch/9477617/onlv1rq/silent/"
                        },
                        "fail_silently": true,
                        "module": "eox_hooks.actions"
                    }
                },
                "LANGUAGE_CODE": "en",
                "PLATFORM_NAME": "Site TEST 1",
                "USE_EDNX_SIGNAL": true,
            },
            "key": "xAer5z6FEbW",
            "subdomain": "testing.site2.edu.io",
        }

        Response: {
            "id": 300,
            "values": {
                "EOX_CORE_USER_UPDATE_SAFE_FIELDS": [
                    "is_active",
                    "password",
                    "fullname",
                    "mailing_address",
                    "year_of_birth",
                ],
                "EOX_HOOKS_DEFINITIONS": {
                    "post_certificate_creation": {
                        "action": "post_to_webhook_url",
                        "config": {
                            "send_certificate_data": true,
                            "url": "https://hooks.zapier.com/hooks/catch/9477617/onlv1rq/silent/"
                        },
                        "fail_silently": true,
                        "module": "eox_hooks.actions"
                    }
                },
                "LANGUAGE_CODE": "en",
                "PLATFORM_NAME": "Site TEST 1",
                "USE_EDNX_SIGNAL": true,
            },
            "key": "xAer5z6FEbW",
            "subdomain": "testing.site2.edu.io",
            "organizations": [
                2
            ]
        }

    **Example Update Request**:

    `PATCH <domain>/eox-tenant/api/v1/microsites/xAer5z6FEbW/`

        body: {
            "values": {
                "Test": "these are the new values."
            }
        }

        Response:
        {
            "id": 1001,
            "values": {
                "test": "new values"
            },
            "key": "xAer5z6FEbW",
            "subdomain": "testing.site-1.localhost",
            "organizations": []
        }

    **Example Delete Request**:

    `DELETE <domain>/eox-tenant/api/v1/microsites/xAer5z6FEbW/`

        Response: No content status code 204
    """

    authentication_classes = (BearerAuthentication, SessionAuthentication)
    parser_classes = [JSONParser]
    permission_classes = [EoxTenantAPIPermission]
    serializer_class = MicrositeSerializer
    alternative_lookup_field = 'key'
    queryset = Microsite.objects.all()


class TenantConfigViewSet(AlternativeFieldLookupMixin, viewsets.ModelViewSet):
    """ViewSet that allows the basic API actions over the TenantConfig model.

    This Viewset inherits from the AlternativeFieldLookupMixin class; therefore,
    in the actions of retrieve, update, partial_update, and destroy, you can
    send both the autogenerated id field (pk) or the TenantConfig external_key to
    get the corresponding object.

    **Example Read Request**:

    `GET <domain>/eox-tenant/api/v1/configs/`

        Response:
        [
            {
                "id": 1,
                "lms_configs": {
                    "extended_profile_fields": [
                        "name_first",
                        "father_last_name",
                        "mother_last_name",
                    ],
                    "EDNX_USE_SIGNAL": true,
                    "EOX_CORE_UPDATE_USERS_ENABLE": true,
                    "LANGUAGE_CODE": "en",
                    "PLATFORM_NAME": "Site 1 initiatives",
                    "SITE_NAME": "site1.localhost",
                    "course_org_filter": [
                        "edX"
                    ],
                    "platform_name": "Site 1 initiatives"
                },
                "studio_configs": {},
                "theming_configs": {},
                "meta": {},
                "external_key": "ACop9823wJ",
                "organizations": [
                    2
                ]
            },
            {
                "id": 2,
                "lms_configs": {
                    "PLATFORM_NAME": "Site 3 | this one has a footer lang selector",
                    "SITE_NAME": "site3.localhost",
                    "FEATURES": {
                        "SHOW_FOOTER_LANGUAGE_SELECTOR": true
                    },
                    "EDNX_USE_SIGNAL": true
                },
                "studio_configs": {},
                "theming_configs": {},
                "meta": {},
                "external_key": "xAer5z6FEbW",
                "organizations": []
            },
            ...
        ]

    `GET <domain>/eox-tenant/api/v1/configs/xAer5z6FEbW/`

        Response:
        {
            "id": 207,
            "lms_configs": {
                "PLATFORM_NAME": "Site 3 | this one has a footer lang selector",
                "SITE_NAME": "site3.localhost",
                "FEATURES": {
                    "SHOW_FOOTER_LANGUAGE_SELECTOR": true
                },
                "EDNX_USE_SIGNAL": true
            },
            "studio_configs": {},
            "theming_configs": {},
            "meta": {},
            "external_key": "xAer5z6FEbW",
            "organizations": []
        }

    **Example Create Request**:

    `POST <domain>/eox-tenant/api/v1/configs/`

        body: {
            "lms_configs": {
                "extended_profile_fields": [
                    "name_first",
                    "father_last_name",
                    "mother_last_name",
                ],
                "EDNX_USE_SIGNAL": true,
                "EOX_CORE_UPDATE_USERS_ENABLE": true,
                "LANGUAGE_CODE": "en",
                "PLATFORM_NAME": "Site 1 initiatives",
                "SITE_NAME": "site1.localhost",
                "course_org_filter": [
                    "edX"
                ],
                "platform_name": "Site 1 initiatives"
            },
            "studio_configs": {},
            "theming_configs": {},
            "meta": {},
            "external_key": "ACoi98iu823wJ",
            "organizations": [
                2
            ]
        }

        Response: {
            "id": 1000,
            "lms_configs": {
                "extended_profile_fields": [
                    "name_first",
                    "father_last_name",
                    "mother_last_name",
                ],
                "EDNX_USE_SIGNAL": true,
                "EOX_CORE_UPDATE_USERS_ENABLE": true,
                "LANGUAGE_CODE": "en",
                "PLATFORM_NAME": "Site 1 initiatives",
                "SITE_NAME": "site1.localhost",
                "course_org_filter": [
                    "edX"
                ],
                "platform_name": "Site 1 initiatives"
            },
            "studio_configs": {},
            "theming_configs": {},
            "meta": {},
            "external_key": "ACoi98iu823wJ",
            "organizations": [
                2
            ]
        }

    **Example Update Request**:

    `PATCH <domain>/eox-tenant/api/v1/configs/xAer5z6FEbW/`

        body: {
            "id": 1000,
            "lms_configs": {
                "EDNX_USE_SIGNAL": true,
                "EOX_CORE_UPDATE_USERS_ENABLE": true,
                "LANGUAGE_CODE": "en",
                "PLATFORM_NAME": "NEW Site 1 initiatives",
                "SITE_NAME": "new.site.localhost",
                "course_org_filter": [
                    "edX"
                ],
                "platform_name": "NEW Site 1 initiatives"
            },
            "studio_configs": {
                "test": "these are the new values"
            },
        }

        Response:
        {
            "id": 1000,
            "lms_configs": {
                "EDNX_USE_SIGNAL": true,
                "EOX_CORE_UPDATE_USERS_ENABLE": true,
                "LANGUAGE_CODE": "en",
                "PLATFORM_NAME": "NEW Site 1 initiatives",
                "SITE_NAME": "new.site.localhost",
                "course_org_filter": [
                    "edX"
                ],
                "platform_name": "NEW Site 1 initiatives"
            },
            "studio_configs": {
                "test": "these are the new values"
            },
            "theming_configs": {},
            "meta": {},
            "external_key": "ACoi98iu823wJ",
            "organizations": [
                2
            ]
        }

    **Example Delete Request**:

    `DELETE <domain>/eox-tenant/api/v1/configs/dmB6BxmINGD/`

        Response: No content status code 204
    """

    authentication_classes = (BearerAuthentication, SessionAuthentication)
    parser_classes = [JSONParser]
    permission_classes = [EoxTenantAPIPermission]
    serializer_class = TenantConfigSerializer
    alternative_lookup_field = 'external_key'
    queryset = TenantConfig.objects.all()


class RouteViewSet(viewsets.ModelViewSet):
    """RouteViewSet that allows the basic API actions."""

    authentication_classes = (BearerAuthentication, SessionAuthentication)
    parser_classes = [JSONParser]
    permission_classes = [EoxTenantAPIPermission]
    serializer_class = RouteSerializer
    queryset = Route.objects.all()
